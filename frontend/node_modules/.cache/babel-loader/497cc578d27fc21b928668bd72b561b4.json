{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    //const {\n    //userSignin: { userInfo },\n    //} = getState();\n    //const { data } = await Axios.post('/api/orders', order, {\n    //headers: {\n    //Authorization: `Bearer ${userInfo.token}`,\n    //},\n    //});\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: console.log('ji')\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["F:/Users/lenovo/Desktop/Amazonia/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","createOrder","order","dispatch","getState","type","payload","console","log","localStorage","removeItem","error","response","data","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AAEA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,oBAHF,QAKO,6BALP;AASA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEN,oBAAR;AAA8BO,IAAAA,OAAO,EAAEJ;AAAvC,GAAD,CAAR;;AACA,MAAI;AACF;AACE;AACF;AACA;AACE;AACE;AACF;AACF;AACAC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,oBAAR;AAA8BM,MAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAY,IAAZ;AAAvC,KAAD,CAAR;AACAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACAY,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACD,GAZD,CAaA,OAAOC,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,iBADC;AAEPQ,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAtC,GACIH,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OADxB,GAEIH,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CAxBM","sourcesContent":["import Axios from 'axios';\r\nimport { CART_EMPTY } from '../constants/cartConstants';\r\n\r\nimport {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n\r\n} from '../constants/orderConstants';\r\n\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n  try {\r\n    //const {\r\n      //userSignin: { userInfo },\r\n    //} = getState();\r\n    //const { data } = await Axios.post('/api/orders', order, {\r\n      //headers: {\r\n        //Authorization: `Bearer ${userInfo.token}`,\r\n      //},\r\n    //});\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: console.log('ji') });\r\n    dispatch({ type: CART_EMPTY });\r\n    localStorage.removeItem('cartItems');\r\n  } \r\n  catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}